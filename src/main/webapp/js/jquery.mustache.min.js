(function($,window){var templateMap={},instance=null,options={warnOnMissingTemplates:false,allowOverwrite:true,domTemplateType:"text/html"};function getMustache(){if(instance===null){instance=window.Mustache;if(instance===void 0){$.error("Failed to locate Mustache instance, are you sure it has been loaded?")}}return instance}function has(templateName){return templateMap[templateName]!==void 0}function add(templateName,templateHtml){if(!options.allowOverwrite&&has(templateName)){$.error("TemplateName: "+templateName+" is already mapped.");return}templateMap[templateName]=$.trim(templateHtml)}function addFromDom(){var templateElementIds;if(arguments.length===0){templateElementIds=$("body script").filter('[type="'+options.domTemplateType+'"]').map(function(){return this.id})}else{templateElementIds=$.makeArray(arguments)}$.each(templateElementIds,function(){var templateHtml=$("#"+this).html();if(templateHtml===void 0){$.error("No such elementId: #"+this)}else{add(this,templateHtml)}})}function remove(templateName){var result=templateMap[templateName];delete templateMap[templateName];return result}function clear(){templateMap={};getMustache().clearCache()}function render(templateName,templateData){if(!has(templateName)){if(options.warnOnMissingTemplates){$.error("No template registered for: "+templateName)}return""}return getMustache().to_html(templateMap[templateName],templateData,templateMap)}function load(url,onComplete){return $.get(url).done(function(templates){$(templates).filter("script").each(function(){if(this.id){add(this.id,$(this).html())}});if($.isFunction(onComplete)){onComplete()}})}function templates(){return $.map(templateMap,function(value,key){return key})}$.Mustache={options:options,load:load,add:add,addFromDom:addFromDom,remove:remove,clear:clear,render:render,templates:templates,instance:instance};$.fn.mustache=function(templateName,templateData,options){var settings=$.extend({method:"append"},options);var renderTemplate=function(obj,viewModel){$(obj)[settings.method](render(templateName,viewModel))};return this.each(function(){var element=this;if($.isArray(templateData)){$.each(templateData,function(){renderTemplate(element,this)})}else{renderTemplate(element,templateData)}})}}(jQuery,window));